paths:
  /Task/:
    # Crear una tarea
    post:
      security:
        - userId: []
      tags:
        - Task
      summary: "Crear nueva tarea"
      description: "Un usuario registrado puede crear una nueva tarea"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/insertTaskBody"
      responses:
        "200":
          description: "Una tarea creada "
          content:
            application/json:
              schema:
                $ref: "#/components/insertTaskRespose"
       
        "400":
          description: "la tarea ya existe"
          content:
            application/json:
              schema:
                example:
                  status: false
                  message: "la tarea ya existe"

        "401":
          $ref: "#/responses/401"
    
     # Actualizar una tarea
    put:
      security:
        - userId: []
      tags:
        - Task
      summary: "Actualizar una tarea"
      description: "un usuario registrado puede modificar la informacion de una tarea"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/updateTaskBody"
      responses:
        "200":
          description: "La tarea fue actualizada"
          content:
            application/json:
              schema:
                $ref : "#/components/updateUserRespose"
                  
        "400":
          $ref: "#/responses/400_task"

        "401":
          $ref: "#/responses/401"

    # obtener todos las tareas
    get:
      security:
        - userId: []
      tags:
        - Task
      summary: obtener todas las tareas
      description: "Un usuario registrado puede obtener la informacion de todas las tareas"
      produces:
        - application/json
      responses:
        "200":
          description: "Lista de tareas"
          content:
            application/json:
              schema:
                $ref: "#/components/getTaskResposeList"
                    
        "401":
          $ref: "#/responses/401"

  
   
  /Task/{taskId}:
  #obtener una tarea
    get:
      security:
        - userId: []
      tags:
        - Task
      summary: obtener Una tarea
      description: "Un usuario registrado puede obtener la informacion de  una tarea en especifico"
      produces:
        - application/json
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true

      responses:
        "200":
          description: "Tarea econtrada"
          content:
            application/json:
              schema:
                $ref: "#/components/getTaskRespose"
        
        "400":
          $ref: "#/responses/400_task"
                    
        "401":
          $ref: "#/responses/401"
    
    # Eliminar una tarea
    delete:
      security:
        - userId: []
      tags:
        - Task
      summary: Eliminar una tarea
      description: "un usuario registrado puede eliminar la informacion de una tarea"
      produces:
        - application/json
      parameters:
        - name: taskId
          in: path
          schema:
            type: string
          required: true
      responses:
        "200":
          description: "La tarea se elimino"
          content:
            application/json:
              schema:
                $ref: "#/components/deleteUserRespose"
        
        "400":
          $ref: "#/responses/400_task"

        "401":
          $ref: "#/responses/401"

definitions:
#examples of jsons
  insertTaskBody:
    type: object
    properties:
      title:
        type: string
        example: "Salir a correr"
      description:
        type: string
        example: "Salir a correr al parque a las 5 de la tarde"
      completed:
        type: boolean
        example: false
      deliveryDate: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "20/05/2021"
      comments:
        type: array
        example: [
          "Avisar a Mam치",
          "Poner cronometro",
          "Despues ir al Super"
        ]
      responsable: 
        type: string
        example: "58b892kb-d7hb-4en4-8984-303ja768y5g6"
      tags:
        type: array
        example: [
          "workout",
          "running",
          "healty"
        ]



  updateTaskBody:
    type: object
    properties:
      taskId:
        type: string
        example: "ea6c9444-65b1-4671-bf79-03654f7b248d"
      title:
        type: string
        example: "Salir a correr"
      description:
        type: string
        example: "Salir a correr al parque a las 5 de la tarde"
      completed:
        type: boolean
        example: false
      deliveryDate: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "20/05/2021"
      comments:
        type: array
        example: [
          "Avisar a Mam치",
          "Poner cronometro",
          "Despues ir al Super"
        ]
      responsable: 
        type: string
        example: "58b892kb-d7hb-4en4-8984-303ja768y5g6"
      tags:
        type: array
        example: [
          "workout",
          "running",
          "healty"
        ]

responses:
  "400_task":
    description: "la tarea no existe"
    content:
      application/json:
        schema:
          example:
            status: false
            message: "La tarea no existe"


components:
  securitySchemes:
    userId:
      type: apiKey
      name: userId
      in: "header"
  #response
  insertTaskRespose:
    type: object
    properties:
      status: 
        type: boolean
        example: true
      message:
        type: string
        example: "Tarea creada con el id: ea6c9444-65b1-4671-bf79-03654f7b248d"
      data:
        $ref: "#/components/createTask"

  getTaskRespose:
    type: object
    properties:
      status: 
        type: boolean
        example: true
      message:
        type: string
        example: "Tarea encontrada"
      data:
        $ref: "#/components/updateTask"

  getTaskResposeList:
    type: object
    properties:
      status: 
        type: boolean
        example: true
      message:
        type: string
        example: "4 Tareas encontradas"
      data:
        type: array
        items: 
          oneOf:
          -  $ref: "#/components/updateTask"
          -  $ref: "#/components/updateTask"
          -  $ref: "#/components/updateTask"
          -  $ref: "#/components/updateTask"
          
  updateUserRespose:
    type: object
    properties:
      status: 
        type: boolean
        example: true
      message:
        type: string
        example: "Tarea creada con el id: 9532c74a-cbbc-41fb-9d89-b926e7a18f4f actualizado"
      data:
        $ref: "#/components/updateTask"

  deleteUserRespose:
    type: object
    properties:
      status: 
        type: boolean
        example: true
      message:
        type: string
        example: "Tarea bbd8e7ee-d8f1-41e7-9ee0-773cdd4881e9 eliminado"
      data:
        type: object
        properties:
          userId:
            type: string
            example: bbd8e7ee-d8f1-41e7-9ee0-773cdd4881e9

 #models
  createTask:
    type: object
    properties:
      taskId:
        type: string
        example: "ea6c9444-65b1-4671-bf79-03654f7b248d"
      title:
        type: string
        example: "Salir a correr"
      description:
        type: string
        example: "Salir a correr al parque a las 5 de la tarde"
      completed:
        type: boolean
        example: false
      deliveryDate: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "20/05/2021"
      comments:
        type: array
        example: [
          "Avisar a Mam치",
          "Poner cronometro",
          "Despues ir al Super"
        ]
      responsable: 
        type: string
        example: "58b892kb-d7hb-4en4-8984-303ja768y5g6"
      tags:
        type: array
        example: [
          "workout",
          "running",
          "healty"
        ]
      dateCreated: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "20/05/2017"

  updateTask:
    type: object
    properties:
      taskId:
        type: string
        example: "ea6c9444-65b1-4671-bf79-03654f7b248d"
      title:
        type: string
        example: "Salir a correr"
      description:
        type: string
        example: "Salir a correr al parque a las 5 de la tarde"
      completed:
        type: boolean
        example: false
      deliveryDate: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "20/05/2021"
      comments:
        type: array
        example: [
          "Avisar a Mam치",
          "Poner cronometro",
          "Despues ir al Super"
        ]
      responsable: 
        type: string
        example: "58b892kb-d7hb-4en4-8984-303ja768y5g6"
      tags:
        type: array
        example: [
          "workout",
          "running",
          "healty"
        ]
      dateCreated: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "20/05/2017"
      dateUpdate: 
        type: date
        pattern: "/([0-9]{2})/(?:[0-9]{2})/([0-9]{4})/"
        example: "23/04/2020"
      

    

    
